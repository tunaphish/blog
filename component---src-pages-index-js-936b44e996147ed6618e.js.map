{"version":3,"sources":["webpack://digital-constellation/./src/pages/index.js"],"names":["graph","GraphWrapper","styled","AboutMe","data","location","notes","allFile","edges","graphData","nodes","map","note","id","node","childMdx","frontmatter","title","slug","links","reduce","currentArray","root","inboundLinks","inboundReferences","inboundReference","source","target","concat","refElement","React","window","props","height","innerHeight","width","innerWidth","ForceGraph","current","handleResize","visualization","addEventListener","removeEventListener","ref"],"mappings":"8IAQIA,E,+CAEEC,EAAeC,oBAAH,2DAAGA,CAAH,uEAYZC,EAAUD,oBAAH,sDAAGA,CAAH,MA6Eb,UA1EkB,SAAC,GAAwB,IAAtBE,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAQF,EAAKG,QAAQC,MAsBrBC,EAAY,CAChBC,MApBYJ,EAAMK,KAAI,SAAAC,GACtB,MAAO,CACLC,GAAID,EAAKE,KAAKC,SAASC,YAAYC,MACnCC,KAAMN,EAAKE,KAAKC,SAASG,SAkB3BC,MAbYb,EAAMc,QAAO,SAACC,EAAcT,GACxC,IAAMU,EAAOV,EAAKE,KAAKC,SAASC,YAAYC,MACtCM,EAAeX,EAAKE,KAAKC,SAASS,kBAAkBb,KAAI,SAAAc,GAC5D,MAAO,CACLC,OAAQD,EAAiBT,YAAYC,MACrCU,OAAQL,MAGZ,OAAOD,EAAaO,OAAOL,KAC1B,KAOGM,EAAaC,WAwBnB,OAtBAA,aAAgB,WACd,GAAsB,oBAAXC,OAAX,CACA,IAAMC,EAAQ,CACZC,OAAQF,OAAOG,YACfC,MAAOJ,OAAOK,YAEhBpC,EAAQ,IAAIqC,IAAWR,EAAWS,QAASN,EAAOvB,MACjD,IAEHqB,aAAgB,WACd,GAAsB,oBAAXC,OAAX,CAEA,IAAMQ,EAAe,WACnBvC,EAAMwC,cAAcP,OAAOF,OAAOG,aAClClC,EAAMwC,cAAcL,MAAMJ,OAAOK,aAGnC,OADAL,OAAOU,iBAAiB,SAAUF,GAC3B,WACLR,OAAOW,oBAAoB,SAAUH,QAKvC,gCACE,gBAACtC,EAAD,CAAc0C,IAAKd,IAGnB,gBAAC,IAAD,CAAQxB,SAAUA,GAChB,gBAAC,IAAD,CAAKY,MAAM,cACX,gBAACd,EAAD,KACE,2CACA,8JAIA","file":"component---src-pages-index-js-936b44e996147ed6618e.js","sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from 'styled-components';\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport ForceGraph from \"../components/force-graph\"\n\nlet graph;\n\nconst GraphWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n\n  z-index: 99;\n\n  canvas {\n    max-width: 100%;\n  }\n`\n\nconst AboutMe = styled.div`\n`\n\nconst BlogIndex = ({ data, location }) => {\n  const notes = data.allFile.edges\n\n  //create nodes\n  const nodes = notes.map(note => {\n    return {\n      id: note.node.childMdx.frontmatter.title,\n      slug: note.node.childMdx.slug\n    }\n  });\n\n  //create links\n  const links = notes.reduce((currentArray, note) => {\n    const root = note.node.childMdx.frontmatter.title;\n    const inboundLinks = note.node.childMdx.inboundReferences.map(inboundReference => {\n      return {\n        source: inboundReference.frontmatter.title,\n        target: root\n      }\n    })\n    return currentArray.concat(inboundLinks)\n  }, [])\n\n  const graphData = {\n    nodes,\n    links\n  }\n\n  const refElement = React.useRef();\n\n  React.useEffect(() => {\n    if (typeof window === 'undefined') return;\n    const props = {\n      height: window.innerHeight,\n      width: window.innerWidth\n    }\n    graph = new ForceGraph(refElement.current, props, graphData)\n  }, []);\n\n  React.useEffect(() => {\n    if (typeof window === 'undefined') return;\n  \n    const handleResize = () => {\n      graph.visualization.height(window.innerHeight);\n      graph.visualization.width(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    };\n  });\n\n  return (\n    <>\n      <GraphWrapper ref={refElement}>\n\n      </GraphWrapper>\n      <Layout location={location}>\n        <Seo title=\"All posts\" />\n        <AboutMe>\n          <p>Hi, I am Tuan!</p>\n          <p>\n            Welcome to the constellation of my thoughts.\n            The stars are notes I've written to myself attached to eachother through hyperlinks.\n          </p>\n          <p>\n            Click on one and see where the connections take you.\n          </p>\n        </AboutMe> \n      </Layout>\n    </>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n{\n  allFile(filter: {absolutePath: {regex: \"/content/notes/.*md/\"}}) {\n    edges {\n      node {\n        childMdx {\n          inboundReferences {\n            ... on Mdx {\n              frontmatter {\n                title\n              }\n            }\n          }\n          frontmatter {\n            title\n          }\n          slug\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}