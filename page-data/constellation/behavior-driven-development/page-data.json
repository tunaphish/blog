{"componentChunkName":"component---src-templates-note-template-js","path":"/constellation/behavior-driven-development","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Behavior Driven Development\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"<-INSERT GRAPH-> SPECS -> GENERATOR -> TESTARONIS\\nnormally specifications are created at the beginning of a project and subsequently forgotten about and become unmaintained.\\nhow many times has a PM or manager come to me about scenarios we've changed in the past.\\nuses technology like Cucumber or Specflow to generate tests from scenarios\"), mdx(\"h2\", null, \"output\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"automated tests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"navigatable websites of specs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"boring paper documents\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"version control\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"behavior-driven-development","frontmatter":{"title":"Behavior Driven Development"},"excerpt":"<-INSERT GRAPH-> SPECS -> GENERATOR -> TESTARONIS\nnormally specifications are created at the beginning of a project and subsequentlyâ€¦","inboundReferences":[{"frontmatter":{"title":"Code Documentation"},"slug":"code-documentation"}],"outboundReferences":[]}},"pageContext":{"slug":"behavior-driven-development"}},"staticQueryHashes":["3000541721"]}