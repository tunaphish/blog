{"componentChunkName":"component---src-templates-note-template-js","path":"/constellation/ambiguity-increases-with-responsibilities","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Ambiguity Increases with Responsibilities\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In software engineering careers, people perceive this to be the ambiguity of the problems you deal with. However, this applies more to your job responsibilities and roles. There's enough breadth and ambiguity at the higher levels of your career that no two engineer's day will look exactly alike. Generally, they fall into certain archetypes based on a multitide of factors; interal and external like individual personality types and external reward structures. \"), mdx(\"hr\", null), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Staff Engineer, Will Larson\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"ambiguity-increases-with-responsibilities","frontmatter":{"title":"Ambiguity Increases with Responsibilities"},"excerpt":"In software engineering careers, people perceive this to be the ambiguity of the problems you deal with. However, this applies more to yourâ€¦","inboundReferences":[],"outboundReferences":[]}},"pageContext":{"slug":"ambiguity-increases-with-responsibilities"}},"staticQueryHashes":["3000541721"]}