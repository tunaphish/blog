{"componentChunkName":"component---src-templates-note-template-js","path":"/constellation/code-documentation","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Code Documentation\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"documentation is the act of sharing knowledge\"), mdx(\"h1\", null, \"tenets\"), mdx(\"p\", null, \"one diagram = one story\\ndocumentation should \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"exploit authoritative sources (code base)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"enrich authoritative sources (annotations as tags, standardized git commits)\")), mdx(\"h1\", null, \"why is is documentation important?\"), mdx(\"h2\", null, \"code tenure vs developer tenure\"), mdx(\"p\", null, \"average developer tenure is 3 years\\naverage code tenure is 13 years.\\ndocumentation is meant to bridge this gap\"), mdx(\"p\", null, \"play the role of a curator. you are taking the infinite knowledge of development and your project and crafting a useful narrative for your team and stakeholders\"), mdx(\"p\", null, \"software architect's goal is to minimize the human effort required to build and maintain software. thus you should foucs on the speed of delivery.\\nbut not just for you and not just for right now.\\nbut for your coworkers and for the future\"), mdx(\"p\", null, \"the actual act of writing code is easy. the difficulty of coding comes from continuous \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/constellation/decision-making\",\n    \"title\": \"decision-making\"\n  }, \"decision-making\"), \". backing those decisions is knowledge which is required to make informed decisions. thus the efficient storage and retrieval of knowledge is important. \"), mdx(\"h1\", null, \"documents in every code project\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"readme \", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"installation instructions\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"getting started\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"how to contribute\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"glossary\")), mdx(\"h1\", null, \"ideas\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/constellation/behavior-driven-development\",\n    \"title\": \"behavior-driven-development\"\n  }, \"behavior-driven-development\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"annotations as generic documentation\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"design patterns (@adapter that links to GoF pattern)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"callouts (@hack, @provider)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"tags (@provider find all dependencies)\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"decision log\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"explains rationales\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"formalized git (semi formal)\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"generate change log\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"explains rationales\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"allows command line tools exploitation\")))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"code-documentation","frontmatter":{"title":"Code Documentation"},"excerpt":"documentation is the act of sharing knowledge tenets one diagram = one story\ndocumentation should  exploit authoritative sources (code baseâ€¦","inboundReferences":[],"outboundReferences":[{"frontmatter":{"title":"Decision Making"},"slug":"decision-making"},{"frontmatter":{"title":"Behavior Driven Development"},"slug":"behavior-driven-development"}]}},"pageContext":{"slug":"code-documentation"}},"staticQueryHashes":["3000541721"]}